<?xml version="1.0" encoding="UTF-8"?>
<xml3d xmlns="http://www.w3.org/1999/xhtml">

	<defs>
	
		<shader id="shader_surface" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">1 1 1</float3>
			<float name="ambientIntensity">0.3686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_building" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">0.9 0.9 0.9</float3>
			<float name="ambientIntensity">0.5686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_silhouette" script="urn:xml3d:shader:matte">
			<float3 name="diffuseColor">1 0.5 0</float3>
		</shader>
	
	</defs>
	
	<data id="mesh_ground">
		<int name="index">0 2 1 1 2 3</int>
		<float3 name="position">
			0.0 0.0 0.0
			1.0 0.0 0.0
			0.0 0.0 1.0
			1.0 0.0 1.0
		</float3>
		<float3 name="normal">
			0.0 1.0 0.0
			0.0 1.0 0.0
			0.0 1.0 0.0
			0.0 1.0 0.0
		</float3>
		<float2 name="texcoord">
			0.0 1.0
			1.0 1.0
			0.0 0.0
			1.0 0.0
		</float2>
	</data>
	
	<dataflow id="dataflow_planeXZ" out="position">
		<script name="xflow.planeXZ" src="operators/planeXZ.js" type="text/javascript"></script>
		<data compute="position = xflow.planeXZ(contour)">
			<float2 name="contour" param="true" />
		</data>
	</dataflow>

	<dataflow id="dataflow_extrude" out="position, normal">
		<script name="xflow.ensureCCWContour" src="operators/ensureCCWContour.js" type="text/javascript"></script>
		<script name="xflow.planeXZ" src="operators/planeXZ.js" type="text/javascript"></script>
		<script name="xflow.extrudePolygon" src="operators/extrudePolygon.js" type="text/javascript"></script>
		<script name="xflow.deindex" src="operators/deindex.js" type="text/javascript"></script>
		<script name="xflow.generateFaceNormal" src="operators/generateFaceNormal.js" type="text/javascript"></script>
		<float2 name="contour" param="true" />
		<float name="height" param="true" />
		<compute>
			pos1 = xflow.ensureCCWContour(contour);
			pos2 = xflow.planeXZ(pos1);
			pos3, index = xflow.extrudePolygon(pos2, height);
			position = xflow.deindex(pos3, index);
			normal = xflow.generateFaceNormal(position);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_vertexNormal" out="normal">
		<!-- <script name="xflow.vertexNormal" src="operators/vertexNormal.js" type="text/javascript"></script> -->
		<float3 name="position" param="true" />
		<int name="index" param="true" />
		<compute>
			normal = xflow.vertexNormal(position, index);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_mygrid" out="position, normal, texcoord, index">
		<!-- <script name="xflow.mygrid" src="operators/mygrid.js" type="text/javascript"></script> -->
		<int name="size" param="true" />
		<compute>
			position, normal, texcoord, index = xflow.mygrid(size);
		</compute>
	</dataflow>

	<!-- <dataflow id="dataflow_triangulate" out="position, index">
		<float2 name="contour" param="true" />
		<float3 name="delta">0 0.1 0</float3>
		<float name="weight">1</float>
		<compute>
			pos = xflow.planeXZ(contour);
			position = xflow.morph(pos, delta, weight);
			index = xflow.triangulatePolygon(position);
		</compute>
	</dataflow> -->

</xml3d>