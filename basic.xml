<?xml version="1.0" encoding="UTF-8"?>
<xml3d xmlns="http://www.w3.org/1999/xhtml">

	<defs>
	
		<shader id="shader_surface" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">1 1 1</float3>
			<float name="ambientIntensity">0.3686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_building" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">0.9 0.9 0.9</float3>
			<float name="ambientIntensity">0.5686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_terrain" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">0.5 0.5 0.5</float3>
			<float name="ambientIntensity">0.5686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_silhouette" script="urn:xml3d:shader:matte">
			<float3 name="diffuseColor">1 0.5 0</float3>
		</shader>
	
	</defs>
	
	<data id="mesh_ground">
		<int name="index">0 2 1 1 2 3</int>
		<float3 name="position">
			0.0 0.0 0.0
			1.0 0.0 0.0
			0.0 0.0 1.0
			1.0 0.0 1.0
		</float3>
		<float3 name="normal">
			0.0 1.0 0.0
			0.0 1.0 0.0
			0.0 1.0 0.0
			0.0 1.0 0.0
		</float3>
		<float2 name="texcoord">
			0.0 1.0
			1.0 1.0
			0.0 0.0
			1.0 0.0
		</float2>
	</data>
	
	<dataflow id="dataflow_planeXZ" out="position">
		<script name="xflow.planeXZ" src="operators/planeXZ.js" type="text/javascript"></script>
		<data compute="position = xflow.planeXZ(contour)">
			<float2 name="contour" param="true" />
		</data>
	</dataflow>

	<dataflow id="dataflow_extrude" out="position, normal">
		<script name="xflow.ensureCCWContour" src="operators/ensureCCWContour.js" type="text/javascript"></script>
		<script name="xflow.planeXZ" src="operators/planeXZ.js" type="text/javascript"></script>
		<script name="xflow.extrudePolygon" src="operators/extrudePolygon.js" type="text/javascript"></script>
		<script name="xflow.deindex" src="operators/deindex.js" type="text/javascript"></script>
		<script name="xflow.generateFaceNormal" src="operators/generateFaceNormal.js" type="text/javascript"></script>
		<float2 name="contour" param="true" />
		<float name="height" param="true" />
		<compute>
			pos1 = xflow.ensureCCWContour(contour);
			pos2 = xflow.planeXZ(pos1);
			pos3, index = xflow.extrudePolygon(pos2, height);
			position = xflow.deindex(pos3, index);
			normal = xflow.generateFaceNormal(position);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateVertexNormal" out="normal">
		<script name="xflow.generateVertexNormal" src="operators/generateVertexNormal.js" type="text/javascript"></script>
		<float3 name="position" param="true" />
		<int name="index" param="true" />
		<compute>
			normal = xflow.generateVertexNormal(position, index);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateGrid" out="position, normal, texcoord, index">
		<script name="xflow.grid" src="operators/grid.js" type="text/javascript"></script>
		<int name="size" param="true" />
		<compute>
			position, normal, texcoord, index = xflow.grid(size);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateStichedTileWireframe" out="position, normal, texcoord, barycentric">
		<script name="xflow.stichedGrid" src="operators/stichedGrid.js" type="text/javascript"></script>
		<script name="xflow.deindex" src="operators/deindex-grid.js" type="text/javascript"></script>
		<int name="lod" param="true" />
		<int name="stitching" param="true" />
		<float name="elevation" param="true" />
		<float3 name="normal" param="true" />
		<compute>
			position2, normal2, texcoord2, index = xflow.stichedGrid(lod,stitching,elevation);
			position, normal, texcoord, barycentric = xflow.deindex(position2,normal,texcoord2, index);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateStichedTile" out="position, normal, texcoord, index">
		<script name="xflow.stichedGrid" src="operators/stichedGrid.js" type="text/javascript"></script>
		<int name="lod" param="true" />
		<int name="stitching" param="true" />
		<float name="elevation" param="true" />
		<compute>
			position, normal, texcoord, index = xflow.stichedGrid(lod,stitching,elevation);
		</compute>
	</dataflow>
	
	
	
	<dataflow id="dataflow_generateStichedTileNormals" out="position, texcoord, index">
		<script name="xflow.stichedGrid" src="operators/stichedGrid.js" type="text/javascript"></script>
		<int name="lod" param="true" />
		<int name="stitching" param="true" />
		<float name="elevation" param="true" />
		<compute>
			position, normal, texcoord, index = xflow.stichedGrid(lod,stitching,elevation);
		</compute>
	</dataflow>
	
	<data id="grid_6" compute="dataflow['#dataflow_generateStaticGrid']">
		<int name="lod"> 6 </int>
	</data>
	
	<data id="grid_6_vertex" compute="dataflow['#dataflow_generateVertexGrid']">
		<int name="lod"> 6 </int>
	</data>
	
	<dataflow id="dataflow_generateStaticGrid" out="position, normal, texcoord, index">
		<script name="xflow.vertexGrid" src="operators/vertexGrid.js" type="text/javascript"></script>
		<script name="xflow.gridCenterIndex" src="operators/gridCenterIndex.js" type="text/javascript"></script>
		<int name="lod" param="true" />
		<compute>
			position, normal, texcoord = xflow.vertexGrid(lod);
			index = xflow.gridCenterIndex(lod);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateVertexGrid" out="position, normal, texcoord">
		<script name="xflow.vertexGrid" src="operators/vertexGrid.js" type="text/javascript"></script>
		<script name="xflow.gridCenterIndex" src="operators/gridCenterIndex.js" type="text/javascript"></script>
		<int name="lod" param="true" />
		<compute>
			position, normal, texcoord = xflow.vertexGrid(lod);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateDynamicGridWireframe" out="position,normal,texcoord,barycentric">
	<script name="xflow.gridCenterIndex" src="operators/gridCenterIndex.js" type="text/javascript"></script>
	<script name="xflow.gridDisplace" src="operators/gridDisplace.js" type="text/javascript"></script>
	<script name="xflow.gridBorderIndex" src="operators/gridBorderIndex.js" type="text/javascript"></script>
	<script name="xflow.mergeIndex" src="operators/mergeIndex.js" type="text/javascript"></script>
	<script name="xflow.deindex" src="operators/deindex-grid.js" type="text/javascript"></script>
	<int name="lod" param="true" />
	<float3 name="in_position" param="true" />
	<float name="elevation" param="true" />
	<int name="stitching" param="true" />
	<float3 name="normal" param="true" />
	<float2 name="texcoord" param="true" />
		<compute>
			index1 = xflow.gridCenterIndex(lod);
			index2 = xflow.gridBorderIndex(lod,stitching);
			index3 = xflow.mergeIndex(index1,index2);
			position2 = xflow.gridDisplace(in_position,elevation);
			position, normal, texcoord, barycentric = xflow.deindex(position2,normal,texcoord, index3);
		</compute>
	</dataflow>
	
	<dataflow id="dataflow_generateDynamicGrid" out="position, index">
	<script name="xflow.gridDisplace" src="operators/gridDisplace.js" type="text/javascript"></script>
	<script name="xflow.gridBorderIndex" src="operators/gridBorderIndex.js" type="text/javascript"></script>
	<script name="xflow.mergeIndex" src="operators/mergeIndex.js" type="text/javascript"></script>
	<int name="lod" param="true" />
	<float3 name="in_position" param="true" />
	<int name="in_index" param="true" />
	<float name="elevation" param="true" />
	<int name="stitching" param="true" />
		<compute>
			index2 = xflow.gridBorderIndex(lod,stitching);
			index = xflow.mergeIndex(in_index,index2);
			position = xflow.gridDisplace(in_position,elevation);
		</compute>
	</dataflow>
	
	
	<!--
	<data id="grid_6" compute="dataflow['#dataflow_generateStaticGrid']>
		<int name="lod"> 6 </int>
	</data>
	-->
	<!-- <dataflow id="dataflow_triangulate" out="position, index">
		<float2 name="contour" param="true" />
		<float3 name="delta">0 0.1 0</float3>
		<float name="weight">1</float>
		<compute>
			pos = xflow.planeXZ(contour);
			position = xflow.morph(pos, delta, weight);
			index = xflow.triangulatePolygon(position);
		</compute>
	</dataflow> -->

</xml3d>